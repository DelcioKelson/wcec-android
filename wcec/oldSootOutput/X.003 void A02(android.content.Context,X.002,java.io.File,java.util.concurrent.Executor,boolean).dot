     $z2 = 0
     $i0 = android.os.Build$VERSION.SDK_INT
     label004: $z0 = 0
     label001: $z0 = X.00B.A00
     label002: $z0 = 1
     label003: staticinvoke X.004.A00($r2)
     $r5 = new java.util.ArrayList
     $r7 = $r5
     $r11 = virtualinvoke $r1.A00(\metadata.txt\)
     $r12 = null
     goto label005
     label005: $r66 = new java.io.InputStreamReader
     goto label003
     $r67 = new java.io.BufferedReader
     label007: $r14 = $r67
     label009: $z1 = 0
     label010: $r15 = virtualinvoke $r67.readLine()
     label011: if $r15 == null goto label051
     label012: $z3 = virtualinvoke $r15.startsWith(\.\)
     label051: staticinvoke X.003.A03($r11)
     label013: if $z3 == 0 goto label022
     label014: $z3 = virtualinvoke $r15.startsWith(\superpack_extension\ 1)
     label022: $r17 = virtualinvoke $r15.split(\ \)
     label015: if $z3 == 0 goto label020
     label016: $i0 = virtualinvoke $r15.length()
     label020: $r16 = newarray (java.lang.Object)1
     label017: if 21 >= $i0 goto label043
     label018: $r12 = virtualinvoke $r15.substring(21)
     label043: $r68 = new java.lang.StringBuilder
     label019: goto label010
     $r160 = $r15
     staticinvoke X.07B.A04(\DexStore\ \Ignoring dex metadata pragma: %s\ $r16)
     label021: goto label010
     $i0 = lengthof $r17
     label023: if $i0 != 3 goto label048
     label024: $r15 = $r170
     label048: $r68 = new java.lang.StringBuilder
     $r18 = $r171
     $r27 = new X.005
     label025: $r19 = $r27
     $r15 = $r27.A00
     $z3 = virtualinvoke $r15.endsWith(\.dex\)
     label027: if $z3 == 0 goto label036
     label028: $r18 = $r27.A02
     label036: $z3 = virtualinvoke $r15.endsWith(\.jar\)
     label029: if $r18 != null goto label036
     label030: $r15 = staticinvoke java.lang.System.getProperty(\java.vm.version\)
     label031: if $r15 == null goto label040
     label032: $z3 = virtualinvoke $r15.startsWith(\1.\)
     label040: virtualinvoke $r7.add($r19)
     label033: if $z3 != 0 goto label040
     label034: $z3 = virtualinvoke $r15.startsWith(\0.\)
     label035: if $z3 != 0 goto label040
     goto label010
     label037: if $z3 == 0 goto label042
     label038: $r15 = $r19.A02
     label042: if $z1 != 0 goto label046
     label039: if $r15 != null goto label042
     label041: goto label010
     $z1 = 1
     label046: $r69 = new X.03x
     goto label040
     virtualinvoke $r68.append(\Illegal line in manifest file: \)
     virtualinvoke $r68.append($r15)
     $r12 = virtualinvoke $r68.toString()
     $r69 = new X.03x
     virtualinvoke $r68.append(\Illegal line in manifest file: \)
     virtualinvoke $r68.append($r15)
     $r12 = virtualinvoke $r68.toString()
     $r69 = new X.03x
     staticinvoke X.003.A03($r67)
     $z1 = virtualinvoke $r7.isEmpty()
     $r16 = newarray (java.lang.Object)0
     label052: $r4 = new java.io.File
     staticinvoke X.07B.A04(\DexStore\ \No secondary dex file trying to start anyway\ $r16)
     label053: $r70 = new X.08h
     label055: $l1 = staticinvoke java.lang.System.nanoTime()
     X.006.A02 = $l1
     $r25 = new java.util.ArrayList
     label056: $r5 = $r25
     $r23 = virtualinvoke $r7.iterator()
     label058: $r12 = null
     label059: $z1 = interfaceinvoke $r23.hasNext()
     label060: if $z1 == 0 goto label306
     label061: $r24 = interfaceinvoke $r23.next()
     label306: $r23 = virtualinvoke $r5.iterator()
     $r19 = (X.005) $r24
     $r68 = new java.lang.StringBuilder
     virtualinvoke $r68.append(\prog-\)
     $r15 = $r19.A01
     virtualinvoke $r68.append($r15)
     virtualinvoke $r68.append(\.dex\)
     $r15 = virtualinvoke $r68.toString()
     $r4 = new java.io.File
     label063: $r22 = $r4
     $z1 = virtualinvoke $r4.exists()
     label065: if $z1 != 0 goto label177
     label177: virtualinvoke $r4.getCanonicalPath()
     label066: $r71 = new java.util.ArrayList
     label098: $r72 = new java.util.HashMap
     $r26 = virtualinvoke $r7.iterator()
     label068: $z2 = interfaceinvoke $r26.hasNext()
     label069: if $z2 == 0 goto label079
     label070: $r24 = interfaceinvoke $r26.next()
     label079: $r4 = virtualinvoke $r2.getCanonicalFile()
     $r27 = (X.005) $r24
     $r68 = new java.lang.StringBuilder
     virtualinvoke $r68.append(\prog-\)
     $r15 = $r27.A01
     virtualinvoke $r68.append($r15)
     virtualinvoke $r68.append(\.dex\)
     $r15 = virtualinvoke $r68.toString()
     label072: $r18 = $r15
     label073: $i0 = virtualinvoke $r15.lastIndexOf(46)
     label074: if $i0 == -1 goto label077
     label075: $r15 = virtualinvoke $r15.substring(0 $i0)
     label077: virtualinvoke $r71.add($r18)
     label076: $r18 = $r15
     label078: goto label068
     $r28 = virtualinvoke $r4.listFiles()
     label080: $i0 = 0
     label081: $r16 = newarray (java.lang.Object)0
     label083: $i2 = lengthof $r28
     staticinvoke X.07B.A03(\DexStore\ \Failed to list files in dex store root\ $r16)
     label082: goto label097
     label097: $z2 = 1
     label084: if $i0 >= $i2 goto label097
     label085: $r4 = $r28$i0
     $r15 = virtualinvoke $r4.getName()
     $z2 = virtualinvoke $r15.equals(\dex_lock\)
     label086: if $z2 != 0 goto label096
     label087: $r15 = virtualinvoke $r4.getName()
     label096: $i0 = $i0 + 1
     label088: $r18 = $r15
     label089: $i3 = virtualinvoke $r15.lastIndexOf(46)
     label090: if $i3 == -1 goto label093
     label091: $r15 = virtualinvoke $r15.substring(0 $i3)
     label093: $z2 = virtualinvoke $r71.contains($r18)
     label092: $r18 = $r15
     label094: if $z2 != 0 goto label096
     label095: staticinvoke X.003.A04($r4)
     goto label084
     X.006.A03 = $r72
     $l1 = staticinvoke java.lang.System.nanoTime()
     X.006.A00 = $l1
     label100: $r15 = $r19.A00
     $r18 = $r19.A02
     label101: if $r18 == null goto label110
     $r15 = \spo\
     label110: $z1 = virtualinvoke $r15.endsWith(\.xzs.tmp~\)
     label102: $z1 = virtualinvoke $r15.equals($r18)
     label103: if $z1 == 0 goto label107
     $r15 = \store-0.dex.spo\
     label107: $r68 = new java.lang.StringBuilder
     label104: $r73 = new X.03y
     label106: goto label112
     label112: $r74 = new java.io.File
     virtualinvoke $r68.append(\store-0.dex.spk.\)
     virtualinvoke $r68.append($r18)
     $r15 = virtualinvoke $r68.toString()
     label109: goto label104
     label111: if $z1 == 0 goto label104
     $r15 = \secondary.dex.jar.xzs\
     goto label104
     label113: $r4 = $r74
     X.006.A04 = 1
     $z1 = virtualinvoke $r15.endsWith(\.dex\)
     label115: if $z1 == 0 goto label123
     label116: $r31 = $r1.A00
     label123: $r11 = virtualinvoke $r1.A00($r15)
     label117: if $r31 != null goto label121
     label118: $r32 = $r1.A01
     label121: $r34 = virtualinvoke $r31.getEntry($r15)
     $r33 = virtualinvoke $r32.getApplicationInfo()
     $r18 = $r33.sourceDir
     $r75 = new java.util.zip.ZipFile
     label119: $r31 = $r75
     $r1.A00 = $r75
     $r11 = virtualinvoke $r31.getInputStream($r34)
     label122: goto label124
     label124: $z1 = virtualinvoke $r15.endsWith(\.spo\)
     label125: if $z1 == 0 goto label128
     label126: $i0 = staticinvoke com.facebook.superpack.SuperpackArchive.getDefaultThreadNum(\spo\)
     label128: $z1 = virtualinvoke $r15.endsWith(\.spk.xz\)
     $r35 = staticinvoke com.facebook.superpack.SuperpackFileInputStream.createFromSingletonArchiveInputStream($r11 \spo\ $i0)
     label127: $r36 = $r35
     goto label132
     label132: $r18 = \classes.dex\
     label129: if $z1 == 0 goto label133
     label130: $i0 = staticinvoke com.facebook.superpack.SuperpackArchive.getDefaultThreadNum(\xz\)
     label133: $z1 = virtualinvoke $r15.endsWith(\.xzs\)
     $r35 = staticinvoke com.facebook.superpack.SuperpackFileInputStream.createFromSingletonArchiveInputStream($r11 \xz\ $i0)
     label131: $r36 = $r35
     goto label144
     label144: $z1 = virtualinvoke $r18.endsWith(\.jar\)
     label134: if $z1 != 0 goto label137
     label135: $z1 = virtualinvoke $r15.endsWith(\.xz\)
     label137: $r76 = new com.facebook.xzdecoder.XzInputStream
     label136: if $z1 != 0 goto label137
     $r36 = $r11
     $r18 = $r15
     goto label144
     label138: $r36 = $r76
     label140: $r18 = $r15
     label141: $i0 = virtualinvoke $r15.lastIndexOf(46)
     label142: if $i0 == -1 goto label144
     label143: $r18 = virtualinvoke $r15.substring(0 $i0)
     label145: if $z1 == 0 goto label156
     label146: $r77 = new java.util.zip.ZipInputStream
     label156: $z1 = virtualinvoke $r18.endsWith(\.dex\)
     label148: $r34 = virtualinvoke $r77.getNextEntry()
     label149: if $r34 == null goto label257
     label150: virtualinvoke $r34.getName()
     label257: $r16 = newarray (java.lang.Object)1
     $r38 = virtualinvoke $r34.getName()
     $z1 = virtualinvoke $r38.equals(\classes.dex\)
     label151: if $z1 == 0 goto label148
     label152: $i0 = virtualinvoke $r18.lastIndexOf(46)
     label153: if $i0 == -1 goto label155
     label154: $r18 = virtualinvoke $r18.substring(0 $i0)
     label155: $r36 = $r77
     label157: if $z1 == 0 goto label288
     label158: $r78 = new java.io.FileOutputStream
     label288: $r68 = new java.lang.StringBuilder
     label160: $r40 = newarray (byte)32768
     label161: $i0 = 0
     label162: $i2 = 2147483647 - $i0
     label163: $i3 = staticinvoke java.lang.Math.min(32768 $i2)
     label164: $i2 = 0
     label165: if $i2 >= $i3 goto label170
     $i4 = $i3 - $i2
     label170: if $i2 == -1 goto label173
     label166: $i4 = virtualinvoke $r36.read($r40 $i2 $i4)
     label167: if $i4 >= 0 goto label168
     goto label169
     label168: $i2 = $i2 + $i4
     label169: if $i4 != -1 goto label170
     goto label165
     goto label173
     label173: staticinvoke X.003.A03($r78)
     label171: virtualinvoke $r78.write($r40 0 $i2)
     label172: $i0 = $i0 + $i2
     goto label162
     label174: staticinvoke X.003.A03($r36)
     label175: virtualinvoke $r73.close()
     $z1 = virtualinvoke $r4.renameTo($r22)
     label176: if $z1 == 0 goto label267
     goto label179
     label267: $r68 = new java.lang.StringBuilder
     label179: $r41 = java.util.concurrent.TimeUnit.NANOSECONDS
     $r4 = virtualinvoke $r0.getFilesDir()
     virtualinvoke $r4.getCanonicalPath()
     label178: goto label182
     label182: $r44 = class \LX/003\
     $l1 = staticinvoke java.lang.System.nanoTime()
     $l5 = X.006.A00
     label180: $l1 = $l1 - $l5
     label181: $l1 = virtualinvoke $r41.toMillis($l1)
     $r42 = X.006.A03
     $r43 = staticinvoke java.lang.Long.valueOf($l1)
     interfaceinvoke $r42.put(\total_time\ $r43)
     label183: $r45 = virtualinvoke $r44.getClassLoader()
     $r79 = new X.007
     $r80 = new X.008
     $r81 = new X.009
     label187: $r15 = virtualinvoke $r22.getCanonicalPath()
     $z3 = virtualinvoke $r81.A02()
     label188: $z1 = X.00B.A00
     label189: if $z1 == 0 goto label192
     label190: $i0 = android.os.Build$VERSION.SDK_INT
     label192: $z4 = 0
     label191: if $i0 < 21 goto label192
     $z4 = 1
     label193: if $z4 == 0 goto label203
     label194: $i0 = android.os.Build$VERSION.SDK_INT
     label203: $r51 = $r45
     label195: if $i0 >= 26 goto label198
     label196: $r49 = staticinvoke dalvik.system.DexFile.loadDex($r15 null 0)
     label198: if $i0 >= 29 goto label203
     label197: goto label200
     label200: if $r49 == null goto label203
     label199: $r49 = staticinvoke X.003.A00($r15)
     goto label244
     label245: virtualinvoke $r5.add($r49)
     label244: X.05g.A0B = 1
     label202: staticinvoke X.03w.A00($r0 \Failed to mmap dex file slow starting instead\ $r50 1)
     label204: $r15 = virtualinvoke $r81.A00(0)
     $r18 = virtualinvoke $r22.getName()
     label205: $r38 = $r18
     label206: $r68 = new java.lang.StringBuilder
     label207: $r20 = $r68
     $i0 = virtualinvoke $r18.lastIndexOf(46)
     label209: if $i0 == -1 goto label212
     label210: $r18 = virtualinvoke $r18.substring(0 $i0)
     label212: virtualinvoke $r20.append($r38)
     label211: $r38 = $r18
     virtualinvoke $r20.append(\.odex\)
     $r18 = virtualinvoke $r20.toString()
     label213: $r74 = new java.io.File
     label214: $r4 = $r74
     $l1 = virtualinvoke $r74.lastModified()
     label216: $i0 = android.os.Build$VERSION.SDK_INT
     label217: if $i0 < 26 goto label218
     label218: $r51 = null
     label219: $r15 = virtualinvoke $r22.getCanonicalPath()
     label220: $r68 = new java.lang.StringBuilder
     label221: $r20 = $r68
     label223: $r18 = $r15
     label224: $i2 = virtualinvoke $r15.lastIndexOf(46)
     label225: if $i2 == -1 goto label227
     label226: $r18 = virtualinvoke $r15.substring(0 $i2)
     label227: virtualinvoke $r20.append($r18)
     virtualinvoke $r20.append(\.odex\)
     $r18 = virtualinvoke $r20.toString()
     $r49 = staticinvoke X.00C.A00($r51 $r15 $r18)
     label228: $l5 = virtualinvoke $r4.lastModified()
     $l6 = virtualinvoke $r4.length()
     label229: X.05g.A00 = $l6
     label230: $b7 = $l5 cmp $l1
     label231: X.05g.A0C = 1
     label243: if $z3 != 0 goto label245
     label232: if $z1 == 0 goto label243
     $b7 = $l1 cmp 0L
     goto label240
     label233: $r16 = newarray (java.lang.Object)2
     label240: $r68 = new java.lang.StringBuilder
     label234: $r15 = virtualinvoke $r4.getCanonicalPath()
     label235: $r160 = $r15
     label236: $r43 = staticinvoke java.lang.Long.valueOf($l6)
     label237: $r161 = $r43
     label238: $r15 = staticinvoke java.lang.String.format(\odex possibly rejected at path: %s. New file size: %d\ $r16)
     label239: goto label242
     label242: staticinvoke X.03w.A00($r0 $r15 null 100)
     virtualinvoke $r68.append(\Attempted to load a dex file without a corresponding odex: \)
     $r15 = virtualinvoke $r4.getCanonicalPath()
     virtualinvoke $r68.append($r15)
     $r15 = virtualinvoke $r68.toString()
     goto label245
     label246: if $z0 == 0 goto label059
     label247: $z1 = virtualinvoke $r81.A02()
     label248: if $z1 != 0 goto label059
     label249: $i0 = android.os.Build$VERSION.SDK_INT
     label252: $r82 = new X.03z
     label250: if $i0 < 26 goto label255
     label251: $r12 = staticinvoke X.003.A01($r0 $r45)
     label255: $r33 = virtualinvoke $r0.getApplicationInfo()
     interfaceinvoke $r3.execute($r82)
     label254: goto label059
     $r12 = $r33.sourceDir
     label256: goto label252
     $r160 = $r18
     $r12 = staticinvoke java.lang.String.format(\zip file %s did not contain a classes.dex\ $r16)
     $r56 = new java.io.IOException
     $r36 = $r77
     goto label293
     label293: staticinvoke X.003.A03($r36)
     label261: $r16 = newarray (java.lang.Object)2
     label262: $r55 = staticinvoke java.lang.Integer.valueOf($i0)
     label263: $r160 = $r55
     label264: $r55 = staticinvoke java.lang.Integer.valueOf($i2)
     label265: $r161 = $r55
     label266: staticinvoke X.07B.A01(\DexStore\ \failed to write file (after writing %d and reading %d bytes)\ $r53 $r16)
     virtualinvoke $r68.append(\rename of \)
     virtualinvoke $r68.append($r4)
     virtualinvoke $r68.append(\ to \)
     virtualinvoke $r68.append($r22)
     virtualinvoke $r68.append(\ failed\)
     $r12 = virtualinvoke $r68.toString()
     $r56 = new java.io.IOException
     label271: $r12 = virtualinvoke $r4.getPath()
     label272: $r83 = new android.os.StatFs
     label274: $i0 = android.os.Build$VERSION.SDK_INT
     label275: if $i0 < 18 goto label279
     label276: $l1 = virtualinvoke $r83.getBlockSizeLong()
     label279: $i0 = virtualinvoke $r83.getBlockSize()
     label277: $l5 = virtualinvoke $r83.getAvailableBlocksLong()
     label278: goto label283
     label283: $l1 = $l5 * $l1
     label280: $l1 = (long) $i0
     label281: $i0 = virtualinvoke $r83.getAvailableBlocks()
     label282: $l5 = (long) $i0
     goto label285
     label285: $r16 = newarray (java.lang.Object)2
     label284: $l1 = -1L
     $r160 = $r56
     $r43 = staticinvoke java.lang.Long.valueOf($l1)
     $r161 = $r43
     staticinvoke X.07B.A03(\DexStore\ \failed to extract secondary dex available space: %s\ $r16)
     label287: staticinvoke X.003.A03($r78)
     virtualinvoke $r68.append(\malformed dex asset name: \)
     virtualinvoke $r68.append($r15)
     $r12 = virtualinvoke $r68.toString()
     $r69 = new X.03x
     goto label293
     $r36 = $r11
     label295: virtualinvoke $r73.close()
     label298: $r41 = java.util.concurrent.TimeUnit.NANOSECONDS
     $l1 = staticinvoke java.lang.System.nanoTime()
     $l5 = X.006.A00
     label299: $l1 = $l1 - $l5
     label300: $l1 = virtualinvoke $r41.toMillis($l1)
     $r42 = X.006.A03
     $r43 = staticinvoke java.lang.Long.valueOf($l1)
     interfaceinvoke $r42.put(\total_time\ $r43)
     label302: $r16 = newarray (java.lang.Object)1
     $r160 = $r61
     staticinvoke X.07B.A03(\DexStore\ \Failed to load secondary dex file\ $r16)
     $z0 = virtualinvoke $r22.delete()
     label303: if $z0 != 0 goto label305
     label304: $r16 = newarray (java.lang.Object)0
     staticinvoke X.07B.A03(\DexStore\ \Failed to delete secondary dex file after trying to load\ $r16)
     label307: $z0 = interfaceinvoke $r23.hasNext()
     label308: if $z0 == 0 goto label311
     label309: $r24 = interfaceinvoke $r23.next()
     label311: virtualinvoke $r70.close()
     $r49 = (dalvik.system.DexFile) $r24
     $r62 = staticinvoke X.04x.A00($r0)
     virtualinvoke $r62.A03($r49)
     label310: goto label307
     label312: $l1 = staticinvoke java.lang.System.nanoTime()
     X.006.A01 = $l1
     label314: virtualinvoke $r70.close()
     $l1 = staticinvoke java.lang.System.nanoTime()
     X.006.A01 = $l1
     goto label319
     label319: staticinvoke X.003.A03($r11)
     $r14 = null
     staticinvoke X.003.A03($r14)
     goto label284
     goto label296
     goto label315
