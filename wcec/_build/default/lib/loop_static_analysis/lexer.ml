# 1 "lib/loop_static_analysis/lexer.mll"
 
  open Lexing
  open Parser

  exception SyntaxError of string

  let kwd_tbl = ["goto",GOTO; "if", IF;]
  let id_or_kwd s = try List.assoc s kwd_tbl with _ -> IDENT s


# 13 "lib/loop_static_analysis/lexer.ml"
let __ocaml_lex_tables = {
  Lexing.lex_base =
   "\000\000\237\255\238\255\075\000\002\000\003\000\030\000\031\000\
    \247\255\012\000\249\255\250\255\251\255\252\255\085\000\002\000\
    \255\255\248\255\245\255\244\255\242\255\240\255";
  Lexing.lex_backtrk =
   "\255\255\255\255\255\255\016\000\014\000\012\000\018\000\009\000\
    \255\255\018\000\255\255\255\255\255\255\255\255\002\000\001\000\
    \255\255\255\255\255\255\255\255\255\255\255\255";
  Lexing.lex_default =
   "\001\000\000\000\000\000\255\255\255\255\255\255\255\255\255\255\
    \000\000\255\255\000\000\000\000\000\000\000\000\255\255\255\255\
    \000\000\000\000\000\000\000\000\000\000\000\000";
  Lexing.lex_trans =
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\015\000\016\000\015\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \015\000\006\000\015\000\000\000\000\000\008\000\000\000\000\000\
    \000\000\000\000\010\000\012\000\000\000\011\000\000\000\009\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\013\000\017\000\005\000\007\000\004\000\021\000\
    \020\000\014\000\014\000\014\000\014\000\014\000\014\000\014\000\
    \014\000\014\000\014\000\014\000\014\000\014\000\014\000\014\000\
    \014\000\014\000\014\000\014\000\014\000\014\000\014\000\014\000\
    \014\000\014\000\014\000\019\000\018\000\000\000\000\000\000\000\
    \000\000\014\000\014\000\014\000\014\000\014\000\014\000\014\000\
    \014\000\014\000\014\000\014\000\014\000\014\000\014\000\014\000\
    \014\000\014\000\014\000\014\000\014\000\014\000\014\000\014\000\
    \014\000\014\000\014\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\014\000\014\000\014\000\
    \014\000\014\000\014\000\014\000\014\000\014\000\014\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\014\000\014\000\
    \014\000\014\000\014\000\014\000\014\000\014\000\014\000\014\000\
    \014\000\014\000\014\000\014\000\014\000\014\000\014\000\014\000\
    \014\000\014\000\014\000\014\000\014\000\014\000\014\000\014\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\014\000\014\000\
    \014\000\014\000\014\000\014\000\014\000\014\000\014\000\014\000\
    \014\000\014\000\014\000\014\000\014\000\014\000\014\000\014\000\
    \014\000\014\000\014\000\014\000\014\000\014\000\014\000\014\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000";
  Lexing.lex_check =
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\000\000\015\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\000\000\015\000\255\255\255\255\000\000\255\255\255\255\
    \255\255\255\255\000\000\000\000\255\255\000\000\255\255\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\009\000\000\000\000\000\000\000\004\000\
    \005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\006\000\007\000\255\255\255\255\255\255\
    \255\255\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\014\000\014\000\014\000\
    \014\000\014\000\014\000\014\000\014\000\014\000\014\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\014\000\014\000\
    \014\000\014\000\014\000\014\000\014\000\014\000\014\000\014\000\
    \014\000\014\000\014\000\014\000\014\000\014\000\014\000\014\000\
    \014\000\014\000\014\000\014\000\014\000\014\000\014\000\014\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\014\000\014\000\
    \014\000\014\000\014\000\014\000\014\000\014\000\014\000\014\000\
    \014\000\014\000\014\000\014\000\014\000\014\000\014\000\014\000\
    \014\000\014\000\014\000\014\000\014\000\014\000\014\000\014\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255";
  Lexing.lex_base_code =
   "";
  Lexing.lex_backtrk_code =
   "";
  Lexing.lex_default_code =
   "";
  Lexing.lex_trans_code =
   "";
  Lexing.lex_check_code =
   "";
  Lexing.lex_code =
   "";
}

let rec token lexbuf =
   __ocaml_lex_token_rec lexbuf 0
and __ocaml_lex_token_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 19 "lib/loop_static_analysis/lexer.mll"
           (new_line lexbuf; token lexbuf)
# 136 "lib/loop_static_analysis/lexer.ml"

  | 1 ->
# 20 "lib/loop_static_analysis/lexer.mll"
            ( token lexbuf )
# 141 "lib/loop_static_analysis/lexer.ml"

  | 2 ->
let
# 21 "lib/loop_static_analysis/lexer.mll"
             id
# 147 "lib/loop_static_analysis/lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 21 "lib/loop_static_analysis/lexer.mll"
                ( id_or_kwd id )
# 151 "lib/loop_static_analysis/lexer.ml"

  | 3 ->
# 22 "lib/loop_static_analysis/lexer.mll"
            ( COLON )
# 156 "lib/loop_static_analysis/lexer.ml"

  | 4 ->
# 23 "lib/loop_static_analysis/lexer.mll"
            ( PLUS )
# 161 "lib/loop_static_analysis/lexer.ml"

  | 5 ->
# 24 "lib/loop_static_analysis/lexer.mll"
            ( MINUS )
# 166 "lib/loop_static_analysis/lexer.ml"

  | 6 ->
# 25 "lib/loop_static_analysis/lexer.mll"
            ( TIMES )
# 171 "lib/loop_static_analysis/lexer.ml"

  | 7 ->
# 26 "lib/loop_static_analysis/lexer.mll"
            ( DIV )
# 176 "lib/loop_static_analysis/lexer.ml"

  | 8 ->
# 27 "lib/loop_static_analysis/lexer.mll"
            ( MOD )
# 181 "lib/loop_static_analysis/lexer.ml"

  | 9 ->
# 28 "lib/loop_static_analysis/lexer.mll"
            ( EQUAL )
# 186 "lib/loop_static_analysis/lexer.ml"

  | 10 ->
# 29 "lib/loop_static_analysis/lexer.mll"
            ( BEQ )
# 191 "lib/loop_static_analysis/lexer.ml"

  | 11 ->
# 30 "lib/loop_static_analysis/lexer.mll"
            ( BNEQ )
# 196 "lib/loop_static_analysis/lexer.ml"

  | 12 ->
# 31 "lib/loop_static_analysis/lexer.mll"
            ( BLT)
# 201 "lib/loop_static_analysis/lexer.ml"

  | 13 ->
# 32 "lib/loop_static_analysis/lexer.mll"
            ( BLE)
# 206 "lib/loop_static_analysis/lexer.ml"

  | 14 ->
# 33 "lib/loop_static_analysis/lexer.mll"
            ( BGT)
# 211 "lib/loop_static_analysis/lexer.ml"

  | 15 ->
# 34 "lib/loop_static_analysis/lexer.mll"
            ( BGE)
# 216 "lib/loop_static_analysis/lexer.ml"

  | 16 ->
let
# 35 "lib/loop_static_analysis/lexer.mll"
               s
# 222 "lib/loop_static_analysis/lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 35 "lib/loop_static_analysis/lexer.mll"
                 ( CST (int_of_string s))
# 226 "lib/loop_static_analysis/lexer.ml"

  | 17 ->
# 36 "lib/loop_static_analysis/lexer.mll"
            ( EOF )
# 231 "lib/loop_static_analysis/lexer.ml"

  | 18 ->
# 37 "lib/loop_static_analysis/lexer.mll"
      ( raise (SyntaxError ("Illegal string character: " ^ Lexing.lexeme lexbuf)) )
# 236 "lib/loop_static_analysis/lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf;
      __ocaml_lex_token_rec lexbuf __ocaml_lex_state

;;

