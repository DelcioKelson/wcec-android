
type token = 
  | STRING of (
# 5 "lib/load_cg/parser.mly"
       (string)
# 7 "lib/load_cg/parser__mock.ml.mock"
)
  | EQUAL
  | EOF

# 1 "lib/load_cg/parser.mly"
  
  open Ast

# 16 "lib/load_cg/parser__mock.ml.mock"

let menhir_begin_marker =
  0

and (xv_nonempty_list_edge_, xv_file, xv_edge) =
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 219 "<standard.mly>"
         xs
# 25 "lib/load_cg/parser__mock.ml.mock"
   : 'tv_nonempty_list_edge_) (_startpos_xs_ : Lexing.position) (_endpos_xs_ : Lexing.position) (_startofs_xs_ : int) (_endofs_xs_ : int) (_loc_xs_ : Lexing.position * Lexing.position) (
# 219 "<standard.mly>"
  x
# 29 "lib/load_cg/parser__mock.ml.mock"
   : 'tv_edge) (_startpos_x_ : Lexing.position) (_endpos_x_ : Lexing.position) (_startofs_x_ : int) (_endofs_x_ : int) (_loc_x_ : Lexing.position * Lexing.position) ->
    (
# 220 "<standard.mly>"
    ( x :: xs )
# 34 "lib/load_cg/parser__mock.ml.mock"
     : 'tv_nonempty_list_edge_) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 217 "<standard.mly>"
  x
# 39 "lib/load_cg/parser__mock.ml.mock"
   : 'tv_edge) (_startpos_x_ : Lexing.position) (_endpos_x_ : Lexing.position) (_startofs_x_ : int) (_endofs_x_ : int) (_loc_x_ : Lexing.position * Lexing.position) ->
    (
# 218 "<standard.mly>"
    ( [ x ] )
# 44 "lib/load_cg/parser__mock.ml.mock"
     : 'tv_nonempty_list_edge_) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 17 "lib/load_cg/parser.mly"
                          _2
# 49 "lib/load_cg/parser__mock.ml.mock"
   : unit) (_startpos__2_ : Lexing.position) (_endpos__2_ : Lexing.position) (_startofs__2_ : int) (_endofs__2_ : int) (_loc__2_ : Lexing.position * Lexing.position) (
# 17 "lib/load_cg/parser.mly"
  cg
# 53 "lib/load_cg/parser__mock.ml.mock"
   : 'tv_nonempty_list_edge_) (_startpos_cg_ : Lexing.position) (_endpos_cg_ : Lexing.position) (_startofs_cg_ : int) (_endofs_cg_ : int) (_loc_cg_ : Lexing.position * Lexing.position) ->
    ((
# 17 "lib/load_cg/parser.mly"
                               ( Cg cg )
# 58 "lib/load_cg/parser__mock.ml.mock"
     : 'tv_file) : (
# 12 "lib/load_cg/parser.mly"
      (Ast.edge)
# 62 "lib/load_cg/parser__mock.ml.mock"
    )) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 21 "lib/load_cg/parser.mly"
                            to_node
# 67 "lib/load_cg/parser__mock.ml.mock"
   : (
# 5 "lib/load_cg/parser.mly"
       (string)
# 71 "lib/load_cg/parser__mock.ml.mock"
  )) (_startpos_to_node_ : Lexing.position) (_endpos_to_node_ : Lexing.position) (_startofs_to_node_ : int) (_endofs_to_node_ : int) (_loc_to_node_ : Lexing.position * Lexing.position) (
# 21 "lib/load_cg/parser.mly"
                    _2
# 75 "lib/load_cg/parser__mock.ml.mock"
   : unit) (_startpos__2_ : Lexing.position) (_endpos__2_ : Lexing.position) (_startofs__2_ : int) (_endofs__2_ : int) (_loc__2_ : Lexing.position * Lexing.position) (
# 21 "lib/load_cg/parser.mly"
  from_node
# 79 "lib/load_cg/parser__mock.ml.mock"
   : (
# 5 "lib/load_cg/parser.mly"
       (string)
# 83 "lib/load_cg/parser__mock.ml.mock"
  )) (_startpos_from_node_ : Lexing.position) (_endpos_from_node_ : Lexing.position) (_startofs_from_node_ : int) (_endofs_from_node_ : int) (_loc_from_node_ : Lexing.position * Lexing.position) ->
    (
# 22 "lib/load_cg/parser.mly"
        (Edge (from_node , to_node) )
# 88 "lib/load_cg/parser__mock.ml.mock"
     : 'tv_edge) in
  ((let rec diverge() = diverge() in diverge()) : 'tv_nonempty_list_edge_ * 'tv_file * 'tv_edge)

and menhir_end_marker =
  0
