State 0:
## Known stack suffix:
##
## LR(1) items:
file' -> . file [ # ]
## Transitions:
-- On CST shift to state 1
-- On stmt shift to state 56
-- On nonempty_list(stmt) shift to state 58
-- On file shift to state 60
## Reductions:

State 1:
## Known stack suffix:
## CST
## LR(1) items:
stmt -> CST . ident EQUAL expr SEMICOLON [ EOF CST ]
stmt -> CST . ident COLON IF cond GOTO ident SEMICOLON stmt CST GOTO ident SEMICOLON [ EOF CST ]
## Transitions:
-- On IDENT shift to state 2
-- On ident shift to state 3
## Reductions:

State 2:
## Known stack suffix:
## IDENT
## LR(1) items:
ident -> IDENT . [ TIMES SEMICOLON PLUS MOD MINUS GOTO EQUAL DIV COLON BNEQ BLT BLE BGT BGE BEQ ]
## Transitions:
## Reductions:
-- On TIMES SEMICOLON PLUS MOD MINUS GOTO EQUAL DIV COLON BNEQ BLT BLE BGT BGE BEQ
--   reduce production ident -> IDENT

State 3:
## Known stack suffix:
## CST ident
## LR(1) items:
stmt -> CST ident . EQUAL expr SEMICOLON [ EOF CST ]
stmt -> CST ident . COLON IF cond GOTO ident SEMICOLON stmt CST GOTO ident SEMICOLON [ EOF CST ]
## Transitions:
-- On EQUAL shift to state 4
-- On COLON shift to state 19
## Reductions:

State 4:
## Known stack suffix:
## CST ident EQUAL
## LR(1) items:
stmt -> CST ident EQUAL . expr SEMICOLON [ EOF CST ]
## Transitions:
-- On IDENT shift to state 2
-- On CST shift to state 5
-- On ident shift to state 6
-- On expr shift to state 7
## Reductions:

State 5:
## Known stack suffix:
## CST
## LR(1) items:
expr -> CST . [ TIMES SEMICOLON PLUS MOD MINUS GOTO DIV BNEQ BLT BLE BGT BGE BEQ ]
## Transitions:
## Reductions:
-- On TIMES SEMICOLON PLUS MOD MINUS GOTO DIV BNEQ BLT BLE BGT BGE BEQ
--   reduce production expr -> CST

State 6:
## Known stack suffix:
## ident
## LR(1) items:
expr -> ident . [ TIMES SEMICOLON PLUS MOD MINUS GOTO DIV BNEQ BLT BLE BGT BGE BEQ ]
## Transitions:
## Reductions:
-- On TIMES SEMICOLON PLUS MOD MINUS GOTO DIV BNEQ BLT BLE BGT BGE BEQ
--   reduce production expr -> ident

State 7:
## Known stack suffix:
## CST ident EQUAL expr
## LR(1) items:
expr -> expr . PLUS expr [ TIMES SEMICOLON PLUS MOD MINUS DIV ]
expr -> expr . MINUS expr [ TIMES SEMICOLON PLUS MOD MINUS DIV ]
expr -> expr . TIMES expr [ TIMES SEMICOLON PLUS MOD MINUS DIV ]
expr -> expr . DIV expr [ TIMES SEMICOLON PLUS MOD MINUS DIV ]
expr -> expr . MOD expr [ TIMES SEMICOLON PLUS MOD MINUS DIV ]
stmt -> CST ident EQUAL expr . SEMICOLON [ EOF CST ]
## Transitions:
-- On TIMES shift to state 8
-- On SEMICOLON shift to state 10
-- On PLUS shift to state 11
-- On MOD shift to state 13
-- On MINUS shift to state 17
-- On DIV shift to state 15
## Reductions:

State 8:
## Known stack suffix:
## expr TIMES
## LR(1) items:
expr -> expr TIMES . expr [ TIMES SEMICOLON PLUS MOD MINUS GOTO DIV BNEQ BLT BLE BGT BGE BEQ ]
## Transitions:
-- On IDENT shift to state 2
-- On CST shift to state 5
-- On ident shift to state 6
-- On expr shift to state 9
## Reductions:

State 9:
## Known stack suffix:
## expr TIMES expr
## LR(1) items:
expr -> expr . PLUS expr [ TIMES SEMICOLON PLUS MOD MINUS GOTO DIV BNEQ BLT BLE BGT BGE BEQ ]
expr -> expr . MINUS expr [ TIMES SEMICOLON PLUS MOD MINUS GOTO DIV BNEQ BLT BLE BGT BGE BEQ ]
expr -> expr . TIMES expr [ TIMES SEMICOLON PLUS MOD MINUS GOTO DIV BNEQ BLT BLE BGT BGE BEQ ]
expr -> expr TIMES expr . [ TIMES SEMICOLON PLUS MOD MINUS GOTO DIV BNEQ BLT BLE BGT BGE BEQ ]
expr -> expr . DIV expr [ TIMES SEMICOLON PLUS MOD MINUS GOTO DIV BNEQ BLT BLE BGT BGE BEQ ]
expr -> expr . MOD expr [ TIMES SEMICOLON PLUS MOD MINUS GOTO DIV BNEQ BLT BLE BGT BGE BEQ ]
## Transitions:
## Reductions:
-- On TIMES SEMICOLON PLUS MOD MINUS GOTO DIV BNEQ BLT BLE BGT BGE BEQ
--   reduce production expr -> expr TIMES expr

State 10:
## Known stack suffix:
## CST ident EQUAL expr SEMICOLON
## LR(1) items:
stmt -> CST ident EQUAL expr SEMICOLON . [ EOF CST ]
## Transitions:
## Reductions:
-- On EOF CST
--   reduce production stmt -> CST ident EQUAL expr SEMICOLON

State 11:
## Known stack suffix:
## expr PLUS
## LR(1) items:
expr -> expr PLUS . expr [ TIMES SEMICOLON PLUS MOD MINUS GOTO DIV BNEQ BLT BLE BGT BGE BEQ ]
## Transitions:
-- On IDENT shift to state 2
-- On CST shift to state 5
-- On ident shift to state 6
-- On expr shift to state 12
## Reductions:

State 12:
## Known stack suffix:
## expr PLUS expr
## LR(1) items:
expr -> expr . PLUS expr [ TIMES SEMICOLON PLUS MOD MINUS GOTO DIV BNEQ BLT BLE BGT BGE BEQ ]
expr -> expr PLUS expr . [ TIMES SEMICOLON PLUS MOD MINUS GOTO DIV BNEQ BLT BLE BGT BGE BEQ ]
expr -> expr . MINUS expr [ TIMES SEMICOLON PLUS MOD MINUS GOTO DIV BNEQ BLT BLE BGT BGE BEQ ]
expr -> expr . TIMES expr [ TIMES SEMICOLON PLUS MOD MINUS GOTO DIV BNEQ BLT BLE BGT BGE BEQ ]
expr -> expr . DIV expr [ TIMES SEMICOLON PLUS MOD MINUS GOTO DIV BNEQ BLT BLE BGT BGE BEQ ]
expr -> expr . MOD expr [ TIMES SEMICOLON PLUS MOD MINUS GOTO DIV BNEQ BLT BLE BGT BGE BEQ ]
## Transitions:
-- On TIMES shift to state 8
-- On MOD shift to state 13
-- On DIV shift to state 15
## Reductions:
-- On SEMICOLON PLUS MINUS GOTO BNEQ BLT BLE BGT BGE BEQ
--   reduce production expr -> expr PLUS expr

State 13:
## Known stack suffix:
## expr MOD
## LR(1) items:
expr -> expr MOD . expr [ TIMES SEMICOLON PLUS MOD MINUS GOTO DIV BNEQ BLT BLE BGT BGE BEQ ]
## Transitions:
-- On IDENT shift to state 2
-- On CST shift to state 5
-- On ident shift to state 6
-- On expr shift to state 14
## Reductions:

State 14:
## Known stack suffix:
## expr MOD expr
## LR(1) items:
expr -> expr . PLUS expr [ TIMES SEMICOLON PLUS MOD MINUS GOTO DIV BNEQ BLT BLE BGT BGE BEQ ]
expr -> expr . MINUS expr [ TIMES SEMICOLON PLUS MOD MINUS GOTO DIV BNEQ BLT BLE BGT BGE BEQ ]
expr -> expr . TIMES expr [ TIMES SEMICOLON PLUS MOD MINUS GOTO DIV BNEQ BLT BLE BGT BGE BEQ ]
expr -> expr . DIV expr [ TIMES SEMICOLON PLUS MOD MINUS GOTO DIV BNEQ BLT BLE BGT BGE BEQ ]
expr -> expr . MOD expr [ TIMES SEMICOLON PLUS MOD MINUS GOTO DIV BNEQ BLT BLE BGT BGE BEQ ]
expr -> expr MOD expr . [ TIMES SEMICOLON PLUS MOD MINUS GOTO DIV BNEQ BLT BLE BGT BGE BEQ ]
## Transitions:
## Reductions:
-- On TIMES SEMICOLON PLUS MOD MINUS GOTO DIV BNEQ BLT BLE BGT BGE BEQ
--   reduce production expr -> expr MOD expr

State 15:
## Known stack suffix:
## expr DIV
## LR(1) items:
expr -> expr DIV . expr [ TIMES SEMICOLON PLUS MOD MINUS GOTO DIV BNEQ BLT BLE BGT BGE BEQ ]
## Transitions:
-- On IDENT shift to state 2
-- On CST shift to state 5
-- On ident shift to state 6
-- On expr shift to state 16
## Reductions:

State 16:
## Known stack suffix:
## expr DIV expr
## LR(1) items:
expr -> expr . PLUS expr [ TIMES SEMICOLON PLUS MOD MINUS GOTO DIV BNEQ BLT BLE BGT BGE BEQ ]
expr -> expr . MINUS expr [ TIMES SEMICOLON PLUS MOD MINUS GOTO DIV BNEQ BLT BLE BGT BGE BEQ ]
expr -> expr . TIMES expr [ TIMES SEMICOLON PLUS MOD MINUS GOTO DIV BNEQ BLT BLE BGT BGE BEQ ]
expr -> expr . DIV expr [ TIMES SEMICOLON PLUS MOD MINUS GOTO DIV BNEQ BLT BLE BGT BGE BEQ ]
expr -> expr DIV expr . [ TIMES SEMICOLON PLUS MOD MINUS GOTO DIV BNEQ BLT BLE BGT BGE BEQ ]
expr -> expr . MOD expr [ TIMES SEMICOLON PLUS MOD MINUS GOTO DIV BNEQ BLT BLE BGT BGE BEQ ]
## Transitions:
## Reductions:
-- On TIMES SEMICOLON PLUS MOD MINUS GOTO DIV BNEQ BLT BLE BGT BGE BEQ
--   reduce production expr -> expr DIV expr

State 17:
## Known stack suffix:
## expr MINUS
## LR(1) items:
expr -> expr MINUS . expr [ TIMES SEMICOLON PLUS MOD MINUS GOTO DIV BNEQ BLT BLE BGT BGE BEQ ]
## Transitions:
-- On IDENT shift to state 2
-- On CST shift to state 5
-- On ident shift to state 6
-- On expr shift to state 18
## Reductions:

State 18:
## Known stack suffix:
## expr MINUS expr
## LR(1) items:
expr -> expr . PLUS expr [ TIMES SEMICOLON PLUS MOD MINUS GOTO DIV BNEQ BLT BLE BGT BGE BEQ ]
expr -> expr . MINUS expr [ TIMES SEMICOLON PLUS MOD MINUS GOTO DIV BNEQ BLT BLE BGT BGE BEQ ]
expr -> expr MINUS expr . [ TIMES SEMICOLON PLUS MOD MINUS GOTO DIV BNEQ BLT BLE BGT BGE BEQ ]
expr -> expr . TIMES expr [ TIMES SEMICOLON PLUS MOD MINUS GOTO DIV BNEQ BLT BLE BGT BGE BEQ ]
expr -> expr . DIV expr [ TIMES SEMICOLON PLUS MOD MINUS GOTO DIV BNEQ BLT BLE BGT BGE BEQ ]
expr -> expr . MOD expr [ TIMES SEMICOLON PLUS MOD MINUS GOTO DIV BNEQ BLT BLE BGT BGE BEQ ]
## Transitions:
-- On TIMES shift to state 8
-- On MOD shift to state 13
-- On DIV shift to state 15
## Reductions:
-- On SEMICOLON PLUS MINUS GOTO BNEQ BLT BLE BGT BGE BEQ
--   reduce production expr -> expr MINUS expr

State 19:
## Known stack suffix:
## CST ident COLON
## LR(1) items:
stmt -> CST ident COLON . IF cond GOTO ident SEMICOLON stmt CST GOTO ident SEMICOLON [ EOF CST ]
## Transitions:
-- On IF shift to state 20
## Reductions:

State 20:
## Known stack suffix:
## CST ident COLON IF
## LR(1) items:
stmt -> CST ident COLON IF . cond GOTO ident SEMICOLON stmt CST GOTO ident SEMICOLON [ EOF CST ]
## Transitions:
-- On IDENT shift to state 2
-- On CST shift to state 5
-- On ident shift to state 21
-- On expr shift to state 34
-- On cond shift to state 47
## Reductions:

State 21:
## Known stack suffix:
## ident
## LR(1) items:
cond -> ident . BEQ expr [ GOTO ]
cond -> ident . BNEQ expr [ GOTO ]
cond -> ident . BEQ expr [ GOTO ]
cond -> ident . BLT expr [ GOTO ]
cond -> ident . BLE expr [ GOTO ]
cond -> ident . BGT expr [ GOTO ]
cond -> ident . BGE expr [ GOTO ]
expr -> ident . [ TIMES PLUS MOD MINUS DIV BNEQ BLT BLE BGT BGE BEQ ]
## Transitions:
-- On BNEQ shift to state 22
-- On BLT shift to state 24
-- On BLE shift to state 26
-- On BGT shift to state 28
-- On BGE shift to state 30
-- On BEQ shift to state 32
## Reductions:
-- On TIMES PLUS MOD MINUS DIV BNEQ BLT BLE BGT BGE BEQ
--   reduce production expr -> ident
** Conflict on BNEQ BLT BLE BGT BGE BEQ

State 22:
## Known stack suffix:
## ident BNEQ
## LR(1) items:
cond -> ident BNEQ . expr [ GOTO ]
## Transitions:
-- On IDENT shift to state 2
-- On CST shift to state 5
-- On ident shift to state 6
-- On expr shift to state 23
## Reductions:

State 23:
## Known stack suffix:
## ident BNEQ expr
## LR(1) items:
cond -> ident BNEQ expr . [ GOTO ]
expr -> expr . PLUS expr [ TIMES PLUS MOD MINUS GOTO DIV ]
expr -> expr . MINUS expr [ TIMES PLUS MOD MINUS GOTO DIV ]
expr -> expr . TIMES expr [ TIMES PLUS MOD MINUS GOTO DIV ]
expr -> expr . DIV expr [ TIMES PLUS MOD MINUS GOTO DIV ]
expr -> expr . MOD expr [ TIMES PLUS MOD MINUS GOTO DIV ]
## Transitions:
-- On TIMES shift to state 8
-- On PLUS shift to state 11
-- On MOD shift to state 13
-- On MINUS shift to state 17
-- On DIV shift to state 15
## Reductions:
-- On GOTO
--   reduce production cond -> ident BNEQ expr

State 24:
## Known stack suffix:
## ident BLT
## LR(1) items:
cond -> ident BLT . expr [ GOTO ]
## Transitions:
-- On IDENT shift to state 2
-- On CST shift to state 5
-- On ident shift to state 6
-- On expr shift to state 25
## Reductions:

State 25:
## Known stack suffix:
## ident BLT expr
## LR(1) items:
cond -> ident BLT expr . [ GOTO ]
expr -> expr . PLUS expr [ TIMES PLUS MOD MINUS GOTO DIV ]
expr -> expr . MINUS expr [ TIMES PLUS MOD MINUS GOTO DIV ]
expr -> expr . TIMES expr [ TIMES PLUS MOD MINUS GOTO DIV ]
expr -> expr . DIV expr [ TIMES PLUS MOD MINUS GOTO DIV ]
expr -> expr . MOD expr [ TIMES PLUS MOD MINUS GOTO DIV ]
## Transitions:
-- On TIMES shift to state 8
-- On PLUS shift to state 11
-- On MOD shift to state 13
-- On MINUS shift to state 17
-- On DIV shift to state 15
## Reductions:
-- On GOTO
--   reduce production cond -> ident BLT expr

State 26:
## Known stack suffix:
## ident BLE
## LR(1) items:
cond -> ident BLE . expr [ GOTO ]
## Transitions:
-- On IDENT shift to state 2
-- On CST shift to state 5
-- On ident shift to state 6
-- On expr shift to state 27
## Reductions:

State 27:
## Known stack suffix:
## ident BLE expr
## LR(1) items:
cond -> ident BLE expr . [ GOTO ]
expr -> expr . PLUS expr [ TIMES PLUS MOD MINUS GOTO DIV ]
expr -> expr . MINUS expr [ TIMES PLUS MOD MINUS GOTO DIV ]
expr -> expr . TIMES expr [ TIMES PLUS MOD MINUS GOTO DIV ]
expr -> expr . DIV expr [ TIMES PLUS MOD MINUS GOTO DIV ]
expr -> expr . MOD expr [ TIMES PLUS MOD MINUS GOTO DIV ]
## Transitions:
-- On TIMES shift to state 8
-- On PLUS shift to state 11
-- On MOD shift to state 13
-- On MINUS shift to state 17
-- On DIV shift to state 15
## Reductions:
-- On GOTO
--   reduce production cond -> ident BLE expr

State 28:
## Known stack suffix:
## ident BGT
## LR(1) items:
cond -> ident BGT . expr [ GOTO ]
## Transitions:
-- On IDENT shift to state 2
-- On CST shift to state 5
-- On ident shift to state 6
-- On expr shift to state 29
## Reductions:

State 29:
## Known stack suffix:
## ident BGT expr
## LR(1) items:
cond -> ident BGT expr . [ GOTO ]
expr -> expr . PLUS expr [ TIMES PLUS MOD MINUS GOTO DIV ]
expr -> expr . MINUS expr [ TIMES PLUS MOD MINUS GOTO DIV ]
expr -> expr . TIMES expr [ TIMES PLUS MOD MINUS GOTO DIV ]
expr -> expr . DIV expr [ TIMES PLUS MOD MINUS GOTO DIV ]
expr -> expr . MOD expr [ TIMES PLUS MOD MINUS GOTO DIV ]
## Transitions:
-- On TIMES shift to state 8
-- On PLUS shift to state 11
-- On MOD shift to state 13
-- On MINUS shift to state 17
-- On DIV shift to state 15
## Reductions:
-- On GOTO
--   reduce production cond -> ident BGT expr

State 30:
## Known stack suffix:
## ident BGE
## LR(1) items:
cond -> ident BGE . expr [ GOTO ]
## Transitions:
-- On IDENT shift to state 2
-- On CST shift to state 5
-- On ident shift to state 6
-- On expr shift to state 31
## Reductions:

State 31:
## Known stack suffix:
## ident BGE expr
## LR(1) items:
cond -> ident BGE expr . [ GOTO ]
expr -> expr . PLUS expr [ TIMES PLUS MOD MINUS GOTO DIV ]
expr -> expr . MINUS expr [ TIMES PLUS MOD MINUS GOTO DIV ]
expr -> expr . TIMES expr [ TIMES PLUS MOD MINUS GOTO DIV ]
expr -> expr . DIV expr [ TIMES PLUS MOD MINUS GOTO DIV ]
expr -> expr . MOD expr [ TIMES PLUS MOD MINUS GOTO DIV ]
## Transitions:
-- On TIMES shift to state 8
-- On PLUS shift to state 11
-- On MOD shift to state 13
-- On MINUS shift to state 17
-- On DIV shift to state 15
## Reductions:
-- On GOTO
--   reduce production cond -> ident BGE expr

State 32:
## Known stack suffix:
## ident BEQ
## LR(1) items:
cond -> ident BEQ . expr [ GOTO ]
cond -> ident BEQ . expr [ GOTO ]
## Transitions:
-- On IDENT shift to state 2
-- On CST shift to state 5
-- On ident shift to state 6
-- On expr shift to state 33
## Reductions:

State 33:
## Known stack suffix:
## ident BEQ expr
## LR(1) items:
cond -> ident BEQ expr . [ GOTO ]
cond -> ident BEQ expr . [ GOTO ]
expr -> expr . PLUS expr [ TIMES PLUS MOD MINUS GOTO DIV ]
expr -> expr . MINUS expr [ TIMES PLUS MOD MINUS GOTO DIV ]
expr -> expr . TIMES expr [ TIMES PLUS MOD MINUS GOTO DIV ]
expr -> expr . DIV expr [ TIMES PLUS MOD MINUS GOTO DIV ]
expr -> expr . MOD expr [ TIMES PLUS MOD MINUS GOTO DIV ]
## Transitions:
-- On TIMES shift to state 8
-- On PLUS shift to state 11
-- On MOD shift to state 13
-- On MINUS shift to state 17
-- On DIV shift to state 15
## Reductions:
-- On GOTO
--   reduce production cond -> ident BEQ expr
-- On GOTO
--   reduce production cond -> ident BEQ expr
** Conflict on GOTO

State 34:
## Known stack suffix:
## expr
## LR(1) items:
cond -> expr . BEQ ident [ GOTO ]
cond -> expr . BNEQ ident [ GOTO ]
cond -> expr . BEQ ident [ GOTO ]
cond -> expr . BLT ident [ GOTO ]
cond -> expr . BLE ident [ GOTO ]
cond -> expr . BGT ident [ GOTO ]
cond -> expr . BGE ident [ GOTO ]
expr -> expr . PLUS expr [ TIMES PLUS MOD MINUS DIV BNEQ BLT BLE BGT BGE BEQ ]
expr -> expr . MINUS expr [ TIMES PLUS MOD MINUS DIV BNEQ BLT BLE BGT BGE BEQ ]
expr -> expr . TIMES expr [ TIMES PLUS MOD MINUS DIV BNEQ BLT BLE BGT BGE BEQ ]
expr -> expr . DIV expr [ TIMES PLUS MOD MINUS DIV BNEQ BLT BLE BGT BGE BEQ ]
expr -> expr . MOD expr [ TIMES PLUS MOD MINUS DIV BNEQ BLT BLE BGT BGE BEQ ]
## Transitions:
-- On TIMES shift to state 8
-- On PLUS shift to state 11
-- On MOD shift to state 13
-- On MINUS shift to state 17
-- On DIV shift to state 15
-- On BNEQ shift to state 35
-- On BLT shift to state 37
-- On BLE shift to state 39
-- On BGT shift to state 41
-- On BGE shift to state 43
-- On BEQ shift to state 45
## Reductions:

State 35:
## Known stack suffix:
## expr BNEQ
## LR(1) items:
cond -> expr BNEQ . ident [ GOTO ]
## Transitions:
-- On IDENT shift to state 2
-- On ident shift to state 36
## Reductions:

State 36:
## Known stack suffix:
## expr BNEQ ident
## LR(1) items:
cond -> expr BNEQ ident . [ GOTO ]
## Transitions:
## Reductions:
-- On GOTO
--   reduce production cond -> expr BNEQ ident

State 37:
## Known stack suffix:
## expr BLT
## LR(1) items:
cond -> expr BLT . ident [ GOTO ]
## Transitions:
-- On IDENT shift to state 2
-- On ident shift to state 38
## Reductions:

State 38:
## Known stack suffix:
## expr BLT ident
## LR(1) items:
cond -> expr BLT ident . [ GOTO ]
## Transitions:
## Reductions:
-- On GOTO
--   reduce production cond -> expr BLT ident

State 39:
## Known stack suffix:
## expr BLE
## LR(1) items:
cond -> expr BLE . ident [ GOTO ]
## Transitions:
-- On IDENT shift to state 2
-- On ident shift to state 40
## Reductions:

State 40:
## Known stack suffix:
## expr BLE ident
## LR(1) items:
cond -> expr BLE ident . [ GOTO ]
## Transitions:
## Reductions:
-- On GOTO
--   reduce production cond -> expr BLE ident

State 41:
## Known stack suffix:
## expr BGT
## LR(1) items:
cond -> expr BGT . ident [ GOTO ]
## Transitions:
-- On IDENT shift to state 2
-- On ident shift to state 42
## Reductions:

State 42:
## Known stack suffix:
## expr BGT ident
## LR(1) items:
cond -> expr BGT ident . [ GOTO ]
## Transitions:
## Reductions:
-- On GOTO
--   reduce production cond -> expr BGT ident

State 43:
## Known stack suffix:
## expr BGE
## LR(1) items:
cond -> expr BGE . ident [ GOTO ]
## Transitions:
-- On IDENT shift to state 2
-- On ident shift to state 44
## Reductions:

State 44:
## Known stack suffix:
## expr BGE ident
## LR(1) items:
cond -> expr BGE ident . [ GOTO ]
## Transitions:
## Reductions:
-- On GOTO
--   reduce production cond -> expr BGE ident

State 45:
## Known stack suffix:
## expr BEQ
## LR(1) items:
cond -> expr BEQ . ident [ GOTO ]
cond -> expr BEQ . ident [ GOTO ]
## Transitions:
-- On IDENT shift to state 2
-- On ident shift to state 46
## Reductions:

State 46:
## Known stack suffix:
## expr BEQ ident
## LR(1) items:
cond -> expr BEQ ident . [ GOTO ]
cond -> expr BEQ ident . [ GOTO ]
## Transitions:
## Reductions:
-- On GOTO
--   reduce production cond -> expr BEQ ident
-- On GOTO
--   reduce production cond -> expr BEQ ident
** Conflict on GOTO

State 47:
## Known stack suffix:
## CST ident COLON IF cond
## LR(1) items:
stmt -> CST ident COLON IF cond . GOTO ident SEMICOLON stmt CST GOTO ident SEMICOLON [ EOF CST ]
## Transitions:
-- On GOTO shift to state 48
## Reductions:

State 48:
## Known stack suffix:
## CST ident COLON IF cond GOTO
## LR(1) items:
stmt -> CST ident COLON IF cond GOTO . ident SEMICOLON stmt CST GOTO ident SEMICOLON [ EOF CST ]
## Transitions:
-- On IDENT shift to state 2
-- On ident shift to state 49
## Reductions:

State 49:
## Known stack suffix:
## CST ident COLON IF cond GOTO ident
## LR(1) items:
stmt -> CST ident COLON IF cond GOTO ident . SEMICOLON stmt CST GOTO ident SEMICOLON [ EOF CST ]
## Transitions:
-- On SEMICOLON shift to state 50
## Reductions:

State 50:
## Known stack suffix:
## CST ident COLON IF cond GOTO ident SEMICOLON
## LR(1) items:
stmt -> CST ident COLON IF cond GOTO ident SEMICOLON . stmt CST GOTO ident SEMICOLON [ EOF CST ]
## Transitions:
-- On CST shift to state 1
-- On stmt shift to state 51
## Reductions:

State 51:
## Known stack suffix:
## CST ident COLON IF cond GOTO ident SEMICOLON stmt
## LR(1) items:
stmt -> CST ident COLON IF cond GOTO ident SEMICOLON stmt . CST GOTO ident SEMICOLON [ EOF CST ]
## Transitions:
-- On CST shift to state 52
## Reductions:

State 52:
## Known stack suffix:
## CST ident COLON IF cond GOTO ident SEMICOLON stmt CST
## LR(1) items:
stmt -> CST ident COLON IF cond GOTO ident SEMICOLON stmt CST . GOTO ident SEMICOLON [ EOF CST ]
## Transitions:
-- On GOTO shift to state 53
## Reductions:

State 53:
## Known stack suffix:
## CST ident COLON IF cond GOTO ident SEMICOLON stmt CST GOTO
## LR(1) items:
stmt -> CST ident COLON IF cond GOTO ident SEMICOLON stmt CST GOTO . ident SEMICOLON [ EOF CST ]
## Transitions:
-- On IDENT shift to state 2
-- On ident shift to state 54
## Reductions:

State 54:
## Known stack suffix:
## CST ident COLON IF cond GOTO ident SEMICOLON stmt CST GOTO ident
## LR(1) items:
stmt -> CST ident COLON IF cond GOTO ident SEMICOLON stmt CST GOTO ident . SEMICOLON [ EOF CST ]
## Transitions:
-- On SEMICOLON shift to state 55
## Reductions:

State 55:
## Known stack suffix:
## CST ident COLON IF cond GOTO ident SEMICOLON stmt CST GOTO ident SEMICOLON
## LR(1) items:
stmt -> CST ident COLON IF cond GOTO ident SEMICOLON stmt CST GOTO ident SEMICOLON . [ EOF CST ]
## Transitions:
## Reductions:
-- On EOF CST
--   reduce production stmt -> CST ident COLON IF cond GOTO ident SEMICOLON stmt CST GOTO ident SEMICOLON

State 56:
## Known stack suffix:
## stmt
## LR(1) items:
nonempty_list(stmt) -> stmt . [ EOF ]
nonempty_list(stmt) -> stmt . nonempty_list(stmt) [ EOF ]
## Transitions:
-- On CST shift to state 1
-- On stmt shift to state 56
-- On nonempty_list(stmt) shift to state 57
## Reductions:
-- On EOF
--   reduce production nonempty_list(stmt) -> stmt

State 57:
## Known stack suffix:
## stmt nonempty_list(stmt)
## LR(1) items:
nonempty_list(stmt) -> stmt nonempty_list(stmt) . [ EOF ]
## Transitions:
## Reductions:
-- On EOF
--   reduce production nonempty_list(stmt) -> stmt nonempty_list(stmt)

State 58:
## Known stack suffix:
## nonempty_list(stmt)
## LR(1) items:
file -> nonempty_list(stmt) . EOF [ # ]
## Transitions:
-- On EOF shift to state 59
## Reductions:

State 59:
## Known stack suffix:
## nonempty_list(stmt) EOF
## LR(1) items:
file -> nonempty_list(stmt) EOF . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production file -> nonempty_list(stmt) EOF

State 60:
## Known stack suffix:
## file
## LR(1) items:
file' -> file . [ # ]
## Transitions:
## Reductions:
-- On #
--   accept file

